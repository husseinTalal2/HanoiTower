#include <iostream>
#define size 5
using namespace std;
int rear = -1;
int front = -1;
int circularQueue[size];

bool isFull(){
    return ((front == 0 && rear == size - 1) || (front == rear+1));
}

bool isEmpty(){
    return front == -1;
}
void enQueue(int value){
    if(isFull()){
        cout<<"queue overflow"<<endl;
    }
    else if(rear == -1){
        rear = 0;
        front = 0;
    }
    else if(rear == size-1){
        rear = 0;
    }
    else{
        rear++;
    }
    circularQueue[rear] = value;
}

int deQueue(){
    int item ;
    if(isEmpty()){
        cout<<"queue is empty"<<endl;
    }
    else{
        item = circularQueue[front];
        if(front == rear){
            front = -1;
            rear = -1;
        }
        else if(front == size-1){
            front = 0;
        }
        else
            front++; //delete regularly
    }
    return item;
}
int main() {
    enQueue(5);
    enQueue(6);
    enQueue(78);
    enQueue(23);
    enQueue(59);
    cout<<"deQueued : "<<deQueue()<<endl;
    cout<<"deQueued : "<<deQueue()<<endl;
    cout<<"deQueued : "<<deQueue()<<endl;
    enQueue(100);
    enQueue(200);
    enQueue(300);
    enQueue(400);
    cout<<"deQueued : "<<deQueue()<<endl;
    enQueue(400);
    if(!isEmpty()){
        for(int i = front; i<=rear; i++){
            cout<<"element in queue: "<<circularQueue[i]<<endl;
        }
    }
}
